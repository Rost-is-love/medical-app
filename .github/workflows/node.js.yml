name: Node CI

on:
  - push
  - pull_request

postgres-job:
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: postgres_password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres_user
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
  steps:
      - name: Install PostgreSQL client
          run: |
            apt-get update
            apt-get install --yes postgresql-client

      # queries database with postgres client
      - name: Query database
        run: psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'

      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: npm install, build
       env:
          DATABASE_URL: postgres://postgres_user:postgres_password@postgres:5432/postgres_db
          DB_NAME: postgres_db
          DB_HOST: 5432
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_PASSWORD: postgres_password
          DB_USER: postgres_user
        run: |
          make install
          make build
      - name: Run linter
        run: make lint
      - name: Run tests
        run: make test
